

import os
import re


########################################################################################################################
#
# The images files generated by AI have way too long names with potential breaking characters
#
# This script iterate recursively over the static folders containing
# AI images to rename them into an ordered integer namelist
#
# Beware, ChatGPT code
#
########################################################################################################################


def rename_images(folder_path):
    # Supported image extensions
    image_extensions = ('*.jpg', '*.jpeg', '*.png', '*.gif', '*.bmp', '*.tiff')

    # Regex pattern to check if a file is already renamed
    number_pattern = re.compile(r'^\d+\..+$')

    # Walk through each folder and rename images sequentially
    for root, _, files in os.walk(folder_path):
        image_files = [f for f in files if any(f.lower().endswith(ext[1:]) for ext in image_extensions)]
        image_files.sort()

        counter = 1
        for filename in image_files:
            if number_pattern.match(filename):
                ...#continue

            ext = os.path.splitext(filename)[1].lower()
            new_name = f"{counter}{ext}"
            old_path = os.path.join(root, filename)
            new_path = os.path.join(root, new_name)

            try:
                os.rename(old_path, new_path)
                print(f"Renamed: {old_path} -> {new_path}")
                counter += 1
            except Exception as e:
                print(f"Error renaming {old_path}: {e}")


if __name__ == "__main__":

    folder_paths = ['admin_web/static/images/coordinate',
                    'admin_web/static/images/landscape']

    for folder_path in folder_paths:
        if os.path.exists(folder_path):
            rename_images(folder_path)
        else:
            print("Invalid folder path.")

